FROM ubuntu:latest

# prevent interactive prompts during apt installations
ENV DEBIAN_FRONTEND=noninteractive

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        curl \
        build-essential \
        libvips-dev \
        software-properties-common \
        libsqlite3-dev \
        ffmpeg \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/* && \
    add-apt-repository ppa:ubuntuhandbook1/libheif && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        libheif-dev \
        libheif1 && \
    rm -rf /var/lib/apt/lists/*


# install Go
WORKDIR /tmp
RUN OS="linux" \
    && ARCH=$(uname -m) \
    && case "$ARCH" in \
        i386 | i686) ARCH="386" ;; \
        x86_64) ARCH="amd64" ;; \
        aarch64) ARCH="arm64" ;; \
        armv6l | armv7l) ARCH="armv6l" ;; \
        loongarch64) ARCH="loong64" ;; \
        mips) ARCH="mips" ;; \
        mips64) ARCH="mips64" ;; \
        mips64el) ARCH="mips64le" ;; \
        mipsel) ARCH="mipsle" ;; \
        ppc64) ARCH="ppc64" ;; \
        ppc64le) ARCH="ppc64le" ;; \
        riscv64) ARCH="riscv64" ;; \
        s390x) ARCH="s390x" ;; \
        *) echo "Unsupported architecture: $ARCH"; exit 1 ;; \
    esac \
    && GO=$(curl -s https://go.dev/dl/?mode=json | grep -o "go.*.linux-${ARCH}.tar.gz" | head -n 1 | tr -d '\r\n') \
    && curl -O "https://dl.google.com/go/$GO" \
    && tar -C /usr/local -xzf "$GO" \
    && rm "$GO"
    
# install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# set env variables
ENV PATH=$PATH:/usr/local/go/bin
ENV GOPATH=/go
ENV PATH=$PATH:$GOPATH/bin
ENV CGO_ENABLED=1

# download dependencies
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download

# from the prod docker file
ENV TLZ_ADMIN_ADDR="0.0.0.0:12002"

# Since we're not using hot reloading, its better to keep the container running using another command.
# Using the go run command here will stop the container if the app is stopped.
# Feel free to change this to a more resilient command that keeps the container running
CMD ["sleep", "86400"]