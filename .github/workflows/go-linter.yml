name: lint
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: read
  pull-requests: read

jobs:
  golangci:
    if: github.event.pull_request.draft == false
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true

      - name: Get latest libvips version
        id: libvips-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/libvips/libvips/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Latest libvips version: $LATEST_VERSION"

      # - name: Cache libvips
      #   id: cache-libvips
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/libvips-install
      #     key: libvips-${{ steps.libvips-version.outputs.version }}-${{ runner.os }}-${{ runner.arch }}

      # # the official instructions refer to a PPA that was archived just a few days ago at time of writing this comment,
      # # so build from soure instead
      # - name: Build and install cgif
      #   if: steps.cache-libvips.outputs.cache-hit != 'true'
      #   run: |
      #     git clone https://github.com/dloebl/cgif.git
      #     cd cgif
      #     meson setup build --prefix=/usr/local --buildtype=release
      #     cd build
      #     meson compile
      #     sudo meson install

      # from instrations at: https://github.com/libvips/libvips/wiki/Build-for-Ubuntu#building-from-source
      - name: Install libvips dependencies
        if: steps.cache-libvips.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt install \
            build-essential \
            bc \
            meson \
            ninja-build \

          sudo apt install \
            libfftw3-dev \
            libopenexr-dev \
            libgsf-1-dev \
            libglib2.0-dev \
            liborc-dev \
            libopenslide-dev \
            libmatio-dev \
            libwebp-dev \
            libjpeg-turbo8-dev \
            libexpat1-dev \
            libexif-dev \
            libtiff5-dev \
            libcfitsio-dev \
            libpoppler-glib-dev \
            librsvg2-dev \
            libpango1.0-dev \
            libopenjp2-7-dev \
            liblcms2-dev \
            libimagequant-dev

      - name: Build and install libvips
        if: steps.cache-libvips.outputs.cache-hit != 'true'
        run: |
          VERSION=${{ steps.libvips-version.outputs.version }}
          wget https://github.com/libvips/libvips/archive/refs/tags/v${VERSION}.tar.gz
          tar xf v${VERSION}.tar.gz
          cd libvips-${VERSION}
          meson setup build --libdir=lib --buildtype=release -Dintrospection=disabled
          cd build
          meson compile
          sudo meson install

      # - name: Set up libvips environment
      #   run: |
      #     echo "PKG_CONFIG_PATH=$HOME/libvips-install/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
      #     echo "LD_LIBRARY_PATH=$HOME/libvips-install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      #     echo "$HOME/libvips-install/bin" >> $GITHUB_PATH

      - name: Update library cache
        run: sudo ldconfig

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
